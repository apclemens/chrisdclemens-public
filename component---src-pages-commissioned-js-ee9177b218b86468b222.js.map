{"version":3,"sources":["webpack:///./src/pages/commissioned.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["AboutPage","render","query","data","title","className","allGoogleSheetCommissionedRow","nodes","map","node","to","url","fluid","allFile","edges","find","fileNode","relativePath","thumbnail","childImageSharp","React","Component","children","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"gQASqBA,E,gLACjBC,OAAA,WACI,OACQ,kBAAC,cAAD,CACAC,MAAK,aAuBDD,OAAQ,SAAAE,GACJ,OACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,wCAEX,yBAAKC,UAAU,qBAEXF,EAAKG,8BAA8BC,MAAMC,KAAI,SAACC,GAAD,OACzC,kBAAC,OAAD,CAAMC,GAAI,iBAAiBD,EAAKE,IAAKN,UAAU,qBAC3C,8BACKI,EAAKL,OAEV,kBAAC,IAAD,CACIQ,MAAOT,EAAKU,QAAQC,MAAMC,MAAK,SAACC,GAAD,OAC3BA,EAASP,KAAKQ,eAAiB,gBAAkBR,EAAKS,aACpDT,KAAKU,gBAAgBP,eAvC/B,U,GAHuBQ,IAAMC,Y,uGCK9B,oBAAGC,EAAH,EAAGA,SAAH,OACC,kBAAC,cAAD,CACApB,MAAK,aAgBLD,OAAQ,SAAAE,GAEJ,OAEhB,oCACI,gCACI,kBAAC,OAAD,CAAMO,GAAG,KAAT,kBAKJ,yBAAKL,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,OAAD,CAAMK,GAAG,iBACL,mDAEJ,kBAAC,OAAD,CAAMA,GAAG,WACL,wCAEJ,kBAAC,OAAD,CAAMA,GAAG,WACL,wCAEJ,kBAAC,OAAD,CAAMA,GAAG,aACL,mDAEJ,kBAAC,OAAD,CAAMA,GAAG,aACL,0CAEJ,kBAAC,OAAD,CAAMA,GAAG,UACL,wCAIPY,KAlDG,W,kpeCHhB,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMtB,EAAS,EAATA,MAC9BuB,EADuC,OACvCA,KAaFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFrB,MAAOA,EACP2B,cAAa,KACbL,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAS7B,GAEX,CACE8B,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAAS7B,GAEX,CACE4B,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-commissioned-js-ee9177b218b86468b222.js","sourcesContent":["import React from \"react\"\nimport { Link, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\n\nimport \"./../styles/commissioned-list.scss\"\n\nexport default class AboutPage extends React.Component {\n    render() {\n        return (\n                <StaticQuery\n                query={graphql`\n                    query {\n                          allGoogleSheetCommissionedRow {\n                                  nodes {\n                                      title\n                                      thumbnail\n                                      url\n                                        }\n                                    }\n  allFile(filter: {relativeDirectory: {eq: \"commissioned\"}}) {\n          edges {\n                    node {\n                        relativePath\n                                childImageSharp {\n                                        fluid(maxWidth: 400) {\n                                            ...GatsbyImageSharpFluid\n                                        }\n                                                          }\n                                      }\n                        }\n            }\n                    }\n                    `}\n                    render={data=>{\n                        return (\n  <Layout>\n    <SEO title=\"Commissioned Work | Chris D Clemens\" />\n    \n    <div className=\"commissioned-list\">\n    {\n        data.allGoogleSheetCommissionedRow.nodes.map((node) => \n            <Link to={\"/commissioned/\"+node.url} className=\"commissioned-link\">\n                <span>\n                    {node.title}\n                </span>\n                <Img\n                    fluid={data.allFile.edges.find((fileNode) =>\n                        fileNode.node.relativePath === \"commissioned/\" + node.thumbnail\n                        ).node.childImageSharp.fluid\n                    }\n                />\n            </Link>\n        )\n    }\n    </div>\n\n  </Layout>\n\n                   )}}\n                />\n               )\n    }\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport FrontLink from \"./../components/front-link\"\n\nimport \"./../styles/layout.scss\"\n\nexport default ({ children }) => (\n                <StaticQuery\n                query={graphql`\n                    query {\n                        allFile(filter: {relativeDirectory: {eq: \"front\"}}) {\n                            edges {\n                                node {\n                                    relativePath\n                                    childImageSharp {\n                                        fluid(maxHeight: 300, maxWidth: 300) {\n                                            ...GatsbyImageSharpFluid\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `}\n                render={data => {\n\n                    return (\n\n    <>\n        <header>\n            <Link to=\"/\">\n                Chris Clemens\n            </Link>\n        </header>\n\n        <div className=\"content\">\n            <div className=\"layout-links\">\n                <Link to=\"/commissioned\">\n                    <div>Commissioned Work</div>\n                </Link>\n                <Link to=\"/comics\">\n                    <div>Comics</div>\n                </Link>\n                <Link to=\"/videos\">\n                    <div>Videos</div>\n                </Link>\n                <Link to=\"/original\">\n                    <div>Original Articles</div>\n                </Link>\n                <Link to=\"/drawings\">\n                    <div>Drawings</div>\n                </Link>\n                <Link to=\"/about\">\n                    <div>About</div>\n                </Link>\n            </div>\n\n            {children}\n        </div>\n    </>\n\n                           )\n                }}\n                />\n               )\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}