{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/gallery.js","webpack:///./src/templates/drawings.js"],"names":["children","query","render","data","to","className","SEO","description","lang","meta","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Gallery","props","keyEvent","bind","widths","row","i","image","images","push","fluid","aspectRatio","height","reduce","a","b","maxHeight","forEach","aspect","length","state","imageIndex","event","keyCode","this","setState","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","handleClick","index","id","map","onClick","key","style","width","React","Component","pageContext","fluids","minHeight"],"mappings":"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","file":"component---src-templates-drawings-js-9f2559f1c73396bfc58d.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport FrontLink from \"./../components/front-link\"\n\nimport \"./../styles/layout.scss\"\n\nexport default ({ children }) => (\n                <StaticQuery\n                query={graphql`\n                    query {\n                        allFile(filter: {relativeDirectory: {eq: \"front\"}}) {\n                            edges {\n                                node {\n                                    relativePath\n                                    childImageSharp {\n                                        fluid(maxHeight: 300, maxWidth: 300) {\n                                            ...GatsbyImageSharpFluid\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `}\n                render={data => {\n\n                    return (\n\n    <>\n        <header>\n            <Link to=\"/\">\n                Chris Clemens\n            </Link>\n        </header>\n\n        <div className=\"content\">\n            <div className=\"layout-links\">\n                <Link to=\"/commissioned\">\n                    <div>Commissioned Work</div>\n                </Link>\n                <Link to=\"/comics\">\n                    <div>Comics</div>\n                </Link>\n                <Link to=\"/videos\">\n                    <div>Videos</div>\n                </Link>\n                <Link to=\"/original\">\n                    <div>Original Articles</div>\n                </Link>\n                <Link to=\"/drawings\">\n                    <div>Drawings</div>\n                </Link>\n                <Link to=\"/about\">\n                    <div>About</div>\n                </Link>\n            </div>\n\n            {children}\n        </div>\n    </>\n\n                           )\n                }}\n                />\n               )\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport \"./../styles/gallery.scss\"\n\nexport default class Gallery extends React.Component {\n    constructor(props) {\n        super(props)\n        this.keyEvent = this.keyEvent.bind(this)\n        let widths = []\n        let row = []\n        for (let i=0; i<props.images.length; i++) {\n            let image = props.images[i]\n            row.push(image.fluid.aspectRatio)\n            let height = 1 / (row.reduce(function(a,b){return a+b}, 0))\n            if (height > props.maxHeight) {\n//            } else if (height < props.minHeight) {\n            } else {\n                row.forEach(aspect => {\n                    widths.push(aspect * height)\n                })\n                row = []\n            }\n        }\n        if (row) {\n            row.forEach(aspect => {\n                widths.push(aspect * props.maxHeight)\n            })\n        }\n        this.state = {\n            imageIndex: -1,\n            widths: widths,\n        }\n    }\n    keyEvent(event) {\n        switch(event.keyCode) {\n            case 27: // escape\n                this.setState({imageIndex: -1})\n                break;\n            case 39: // right arrow\n                if (this.state.imageIndex !== -1 && this.state.imageIndex !== this.props.images.length - 1) {\n                    this.setState({imageIndex: this.state.imageIndex + 1})\n                }\n                break;\n            case 37: // left arrow\n                if (this.state.imageIndex !== -1 && this.state.imageIndex !== 0) {\n                    this.setState({imageIndex: this.state.imageIndex - 1})\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.keyEvent, false)\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyEvent, false)\n    }\n    handleClick(event, index) {\n        //const box = event.target.getBoundingClientRect()\n        // give overlay dimensions of box\n        // give overlay animated class\n        // give overlay 0,0,0,0 dimensions\n        this.setState({imageIndex: index})\n    }\n    render() {\n            return (\n<div className={this.props.className + \" gallery \" + (this.state.imageIndex === -1 ? \"\" : \"overlaid\")}>\n    <div className={this.state.imageIndex === -1 ? \"invisible\" : ''} id=\"overlay\">\n        {this.state.imageIndex !== -1 &&\n        <>\n        <div id=\"image\">\n            {this.props.images.map((image, index) => \n                    <>\n                {this.state.imageIndex === index &&\n                    <Img fluid={image.fluid} />\n                }\n                </>\n            )}\n        </div>\n        {this.state.imageIndex !== 0 &&\n        <div id=\"prev\"\n            onClick={() => {this.setState({imageIndex: this.state.imageIndex - 1})}}\n        >&lt;</div>\n        }\n        {this.state.imageIndex !== this.props.images.length - 1 &&\n        <div id=\"next\"\n            onClick={() => {this.setState({imageIndex: this.state.imageIndex + 1})}}\n        >&gt;</div>\n        }\n        <div\n            className=\"close\"\n            onClick={() => {this.setState({imageIndex: -1})}}\n        >\n            &times;\n        </div>\n        </>\n        }\n    </div>\n{\n    this.props.images.map((image, index) =>\n        <div\n            className=\"gallery-image\"\n            key={index}\n            style={{\n                width: '' + this.state.widths[index]*100 + '%',\n            }}\n            onClick={(event) => {\n                this.handleClick(event, index)\n            }}\n        >\n            <Img\n                fluid={image.fluid}\n            />\n        </div>\n    )\n}\n</div>\n       )\n    }\n}\n\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./../components/layout\"\nimport Img from \"gatsby-image\"\nimport SEO from \"../components/seo\"\nimport Gallery from \"./../components/gallery\"\n\nimport \"./../styles/drawings.scss\"\n\nexport default (props) => {\n    return (\n            <Layout>\n    <SEO title=\"Drawings | Chris D Clemens\" />\n                <Gallery\n                    className=\"\"\n                    images={props.pageContext.fluids}\n                    maxHeight = {.5}\n                    minHeight = {.3}\n                />\n            </Layout>\n           )\n}\n"],"sourceRoot":""}