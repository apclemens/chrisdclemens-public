{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/commissioned-page.js","webpack:///./src/components/seo.js"],"names":["children","query","render","data","to","className","Commissioned","props","keyEvent","bind","nextPage","prevPage","state","page","this","setState","pageContext","fluid","length","event","keyCode","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","title","dangerouslySetInnerHTML","__html","text","map","f","index","node","childImageSharp","align","onClick","React","Component","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-templates-commissioned-page-js-07e1fda6012d933ee753.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport FrontLink from \"./../components/front-link\"\n\nimport \"./../styles/layout.scss\"\n\nexport default ({ children }) => (\n                <StaticQuery\n                query={graphql`\n                    query {\n                        allFile(filter: {relativeDirectory: {eq: \"front\"}}) {\n                            edges {\n                                node {\n                                    relativePath\n                                    childImageSharp {\n                                        fluid(maxHeight: 300, maxWidth: 300) {\n                                            ...GatsbyImageSharpFluid\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `}\n                render={data => {\n\n                    return (\n\n    <>\n        <header>\n            <Link to=\"/\">\n                Chris Clemens\n            </Link>\n        </header>\n\n        <div className=\"content\">\n            <div className=\"layout-links\">\n                <Link to=\"/commissioned\">\n                    <div>Commissioned Work</div>\n                </Link>\n                <Link to=\"/comics\">\n                    <div>Comics</div>\n                </Link>\n                <Link to=\"/videos\">\n                    <div>Videos</div>\n                </Link>\n                <Link to=\"/original\">\n                    <div>Original Articles</div>\n                </Link>\n                <Link to=\"/drawings\">\n                    <div>Drawings</div>\n                </Link>\n                <Link to=\"/about\">\n                    <div>About</div>\n                </Link>\n            </div>\n\n            {children}\n        </div>\n    </>\n\n                           )\n                }}\n                />\n               )\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\n\nimport \"./../styles/commissioned.scss\"\n\nexport default class Commissioned extends React.Component {\n    constructor(props) {\n        super(props)\n        this.keyEvent = this.keyEvent.bind(this)\n        this.nextPage = this.nextPage.bind(this)\n        this.prevPage = this.prevPage.bind(this)\n        this.state = {\n            page: 0\n        }\n    }\n    prevPage() {\n        if (this.state.page !== 0) {\n            this.setState({page: this.state.page - 1})\n        }\n    }\n    nextPage() {\n        if (this.state.page !== this.props.pageContext.fluid.length-1) {\n            this.setState({page: this.state.page + 1})\n        }\n    }\n    keyEvent(event) {\n        switch(event.keyCode) {\n            case 39: // right arrow\n                this.nextPage()\n                break;\n            case 37: // left arrow\n                this.prevPage()\n                break;\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.keyEvent, false)\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyEvent, false)\n    }\n    render() {\n        return (\n                <Layout>\n    <SEO title={this.props.pageContext.title + \" | Commissioned Work | Chris D Clemens\"} />\n                    <div className=\"commissioned\">\n                        <h2>\n                            {this.props.pageContext.title}\n                        </h2>\n                        <p dangerouslySetInnerHTML={{__html: this.props.pageContext.text}} />\n                        {\n                            this.props.pageContext.fluid.map(\n                                (f, index) =>\n                                    <Img \n                                        className={index===this.state.page ? '' : 'hide'}\n                                        fluid={f.node.childImageSharp.fluid}\n                                    />\n                            )\n                        }\n\n                        {this.props.pageContext.fluid.length > 1 &&\n                            <>\n                        <div className=\"center\" align=\"center\">\n                            <button onClick={this.prevPage}>❮ Prev</button>\n                            <button onClick={this.nextPage}>Next ❯</button>\n                        </div>\n\n                        <div className=\"center\" align=\"center\">\n                        {\n                            this.props.pageContext.fluid.map(\n                                (f, index) =>\n                                    <button\n                                        className={index===this.state.page ? 'active' : ''}\n                                        onClick={()=>this.setState({page: index})}\n                                    >\n                                        {index+1}\n                                    </button>\n                            )\n                        }\n                        </div>\n                            </>\n                        }\n                    </div>\n                </Layout>\n               )\n    }\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}