{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/templates/commissioned-column.js"],"names":["children","query","render","data","to","className","SEO","description","lang","meta","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Commissioned","props","this","pageContext","dangerouslySetInnerHTML","__html","text","fluid","map","f","index","captions","style","textAlign","marginTop","split","node","childImageSharp","React","Component"],"mappings":"iKAce,oBAAGA,EAAH,EAAGA,SAAH,OACC,kBAAC,cAAD,CACAC,MAAK,aAgBLC,OAAQ,SAAAC,GAEJ,OAEhB,oCACI,gCACI,kBAAC,OAAD,CAAMC,GAAG,KAAT,kBAKJ,yBAAKC,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,OAAD,CAAMD,GAAG,iBACL,mDAEJ,kBAAC,OAAD,CAAMA,GAAG,WACL,wCAEJ,kBAAC,OAAD,CAAMA,GAAG,WACL,wCAEJ,kBAAC,OAAD,CAAMA,GAAG,aACL,mDAEJ,kBAAC,OAAD,CAAMA,GAAG,aACL,0CAEJ,kBAAC,OAAD,CAAMA,GAAG,UACL,wCAIPJ,KAlDG,W,wZCHhB,SAASM,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EADuC,OACvCA,KAaFC,EAAkBL,GAAeI,EAAKE,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFE,MAAOA,EACPK,cAAa,KACbN,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASP,GAEX,CACEQ,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASP,GAEX,CACEM,KAAK,sBACLC,QAASL,IAEXQ,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,2LC9EMgB,E,oBACjB,WAAYC,GAAQ,OAChB,YAAMA,IADS,K,0GAGnBrB,OAAA,WAAU,IAAD,OACL,OACQ,kBAAC,IAAD,KACZ,kBAAC,IAAD,CAAKQ,MAAOc,KAAKD,MAAME,YAAYf,MAAQ,2CAC3B,yBAAKL,UAAU,gBACX,4BACKmB,KAAKD,MAAME,YAAYf,OAE5B,uBAAGgB,wBAAyB,CAACC,OAAQH,KAAKD,MAAME,YAAYG,QAExDJ,KAAKD,MAAME,YAAYI,MAAMC,KACzB,SAACC,EAAGC,GAAJ,OACxB,oCACC,EAAKT,MAAME,YAAYQ,UAAY,wBAAIC,MAAO,CAACC,UAAW,SAAUC,UAAW,KAAM,EAAKb,MAAME,YAAYQ,SAASI,MAAM,KAAKL,IACrG,kBAAC,IAAD,CACIH,MAAOE,EAAEO,KAAKC,gBAAgBV,e,GAnB5BW,IAAMC","file":"component---src-templates-commissioned-column-js-c2c713e8eae5f549838c.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport FrontLink from \"./../components/front-link\"\n\nimport \"./../styles/layout.scss\"\n\nexport default ({ children }) => (\n                <StaticQuery\n                query={graphql`\n                    query {\n                        allFile(filter: {relativeDirectory: {eq: \"front\"}}) {\n                            edges {\n                                node {\n                                    relativePath\n                                    childImageSharp {\n                                        fluid(maxHeight: 300, maxWidth: 300) {\n                                            ...GatsbyImageSharpFluid\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `}\n                render={data => {\n\n                    return (\n\n    <>\n        <header>\n            <Link to=\"/\">\n                Chris Clemens\n            </Link>\n        </header>\n\n        <div className=\"content\">\n            <div className=\"layout-links\">\n                <Link to=\"/commissioned\">\n                    <div>Commissioned Work</div>\n                </Link>\n                <Link to=\"/comics\">\n                    <div>Comics</div>\n                </Link>\n                <Link to=\"/videos\">\n                    <div>Videos</div>\n                </Link>\n                <Link to=\"/original\">\n                    <div>Original Articles</div>\n                </Link>\n                <Link to=\"/drawings\">\n                    <div>Drawings</div>\n                </Link>\n                <Link to=\"/about\">\n                    <div>About</div>\n                </Link>\n            </div>\n\n            {children}\n        </div>\n    </>\n\n                           )\n                }}\n                />\n               )\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\n\nimport \"./../styles/commissioned.scss\"\n\nexport default class Commissioned extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n                <Layout>\n    <SEO title={this.props.pageContext.title + \" | Commissioned Work | Chris D Clemens\"} />\n                    <div className=\"commissioned\">\n                        <h2>\n                            {this.props.pageContext.title}\n                        </h2>\n                        <p dangerouslySetInnerHTML={{__html: this.props.pageContext.text}} />\n                        {\n                            this.props.pageContext.fluid.map(\n                                (f, index) =>\n\t\t\t\t    <>\n\t\t\t\t    {this.props.pageContext.captions && <h3 style={{textAlign: 'center', marginTop: 30}}>{this.props.pageContext.captions.split(';')[index]}</h3>}\n                                    <Img \n                                        fluid={f.node.childImageSharp.fluid}\n                                    />\n\t\t\t\t    </>\n                            )\n                        }\n\t\t\t\n                    </div>\n                </Layout>\n               )\n    }\n}\n"],"sourceRoot":""}